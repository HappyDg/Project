CompactSIP supports 50+ RFCs including:
♦ RFC 3261 – SIP: Session Initiation Protocol  
♦ RFC 3262 – SIP Reliability (PRACK) 
♦ RFC 3263 – SIP: Locating SIP Servers 
♦ RFC 3264 – SDP Offer/Answer
♦ RFC 3265 – SIP   Specific Event Notification
♦ RFC 1321 – MD5: Message Digest Algorithm
♦ RFC 2617 – HTTP Authentication
♦ RFC 2806 – URLs for Telephone Calls
♦ RFC 2833 – RTP Payload for DTMF & Tones
♦ RFC 2915 – NAPTR: Naming Authority Pointer
♦ RFC 2976 – SIP INFO Method 
♦ RFC 3204 – MIME Objects for ISUP and QSIG
♦ RFC 3310 – HTTP Digest Authentication – AKA
♦ RFC 3311 – SIP Update Method
♦ RFC 3329 – Security Mechanism for SIP 

CompactSIP is tight and fast
 
♦ RFC 3428 – SIP Extension for IM
♦ RFC 3489 – STUN: Simple Traversal UDP - NATs
♦ RFC 3550 – RTP: Real-Time Transport Protocol 
♦ RFC 3515 – SIP Refer Method
♦ RFC 3581 – Symmetric Response Routing Ext’n
♦ RFC 3665 – SIP Basic Call Flow Examples
♦ RFC 3711 – SRTP Secure RTP
♦ RFC 3891 – SIP ‘ Replaces’ Header
♦ RFC 3903 – SIMPLE SIP for IM and Presence
♦ RFC 4028 – Session Timers in SIP
♦ RFC 4346 – TLS Transport Layer Security
♦ RFC 4566 – SDP Session Descrip’n Protocol/IPv6
♦ RFC 4568 – SDP Security for Media Streams
♦ DNS Query/Response
♦ TURN – STUN Relay 
♦ Support for methods, headers, and message processing is configurable to optimize memory usage 
♦ Typical configuration fits in 128KB 
♦ Just-in-time parser avoids parsing headers not used by SIP stack or application
♦ Optimized handling of timers avoids high start/stop overhead
♦ Crafted parser eliminates typical parser-generator bloat 

 
CompactSIP is easy to use 
♦ Low-level API provides complete control over all SIP functions and message content
♦ API supports multiple independent services including multi-homing
♦ User can easily add special method and header processing
♦ SDP parser is separate from SIP parser for use in alternate SDP applications

 
CompactSIP is easily ported to any environment 
♦ Portable to any memory model, including flat, heap, pool-based, and mbuf or zbuf
♦ Object-oriented API supports direct function-call interface, inter-task and inter-cpu messaging
♦ Highly scalable – no built-in limits

 
CompactSIP provides a broad development and debugging environment 
♦ Ports include Android, iPhone, Linux, MQX, Nucleus, Symbian, ThreadX, uClinux, uC/OS-II, VxWorks, Windows &
Windows Mobile 
♦ Available pre-integrated to Global IP Solutions (GIPS) MediaEngine for high quality voice and video solutions
♦ Comprehensive example applications to demonstrate use of the APIs
♦ Sample make files and imake scripts
♦ Debugging & auditing features allow compile-time & run-time details for logging of messages & events 

 
CompactSIP is proven 
♦ Extensively interop tested at multiple SIPits and against Asterisk, OpenSIPS and 35+ 3rd party User Agents &
Proxies 
♦ Routinely torture tested against IETF RFC 4475 and PROTOS test suites and in our own test labs

 
Tailoring to Your Application 
♦ Modular structure allows optimum code matching to application
♦ Licensing only the modules required enables the most cost-effective solution
